// _mixins.scss
// Reusable SCSS mixins for the Digital Asset Marketplace
@use 'variables' as *;

// Media query mixins for responsive design
@mixin respond-to($breakpoint) {
    @if $breakpoint == xs {
      @media (min-width: $breakpoint-xs) { @content; }
    }
    @else if $breakpoint == sm {
      @media (min-width: $breakpoint-sm) { @content; }
    }
    @else if $breakpoint == md {
      @media (min-width: $breakpoint-md) { @content; }
    }
    @else if $breakpoint == lg {
      @media (min-width: $breakpoint-lg) { @content; }
    }
    @else if $breakpoint == xl {
      @media (min-width: $breakpoint-xl) { @content; }
    }
    @else if $breakpoint == 2xl {
      @media (min-width: $breakpoint-2xl) { @content; }
    }
  }
  
  @mixin absolute-fill {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  
  // Flexbox layouts
  @mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
  }
  
  // Grid layouts
  @mixin grid($columns: 1, $gap: $space-4) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
  }
  
  // Responsive grid - adjust columns based on screen size
  @mixin responsive-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: $space-4;
    
    @include respond-to(sm) {
      grid-template-columns: repeat(1, 1fr);
    }
    
    @include respond-to(md) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include respond-to(lg) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  // Container with max-width and centered
  @mixin container($max-width: $container-lg) {
    width: 100%;
    max-width: $max-width;
    margin-left: auto;
    margin-right: auto;
    padding-left: $space-4;
    padding-right: $space-4;
  }
  
  // Typography mixins
  @mixin heading-1 {
    font-family: $font-family-secondary;
    font-size: $font-size-3xl;
    font-weight: $font-weight-bold;
    line-height: $line-height-tight;
    margin-bottom: $space-6;
    
    @include respond-to(md) {
      font-size: $font-size-4xl;
    }
  }
  
  @mixin heading-2 {
    font-family: $font-family-secondary;
    font-size: $font-size-2xl;
    font-weight: $font-weight-bold;
    line-height: $line-height-tight;
    margin-bottom: $space-4;
    
    @include respond-to(md) {
      font-size: $font-size-3xl;
    }
  }
  
  @mixin heading-3 {
    font-family: $font-family-secondary;
    font-size: $font-size-xl;
    font-weight: $font-weight-semibold;
    line-height: $line-height-snug;
    margin-bottom: $space-3;
    
    @include respond-to(md) {
      font-size: $font-size-2xl;
    }
  }
  
  @mixin body-text {
    font-family: $font-family-primary;
    font-size: $font-size-base;
    font-weight: $font-weight-regular;
    line-height: $line-height-normal;
  }
  
  @mixin small-text {
    font-family: $font-family-primary;
    font-size: $font-size-sm;
    font-weight: $font-weight-regular;
    line-height: $line-height-normal;
  }
  
  // Button styles
  @mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: $space-2 $space-4;
    border-radius: $radius-md;
    font-family: $font-family-primary;
    font-weight: $font-weight-medium;
    font-size: $font-size-base;
    cursor: pointer;
    transition: all $transition-normal ease-in-out;
    text-decoration: none;
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
  
  @mixin button-primary {
    @include button-base;
    background-color: $primary-600;
    color: white;
    border: none;
    
    &:hover:not(:disabled) {
      background-color: $primary-700;
      transform: translateY(-1px);
    }
    
    &:active:not(:disabled) {
      background-color: $primary-800;
      transform: translateY(0);
    }
  }
  
  @mixin button-secondary {
    @include button-base;
    background-color: $neutral-200;
    color: $neutral-800;
    border: none;
    
    &:hover:not(:disabled) {
      background-color: $neutral-300;
      transform: translateY(-1px);
    }
    
    &:active:not(:disabled) {
      background-color: $neutral-400;
      transform: translateY(0);
    }
  }
  
  @mixin button-outline {
    @include button-base;
    background-color: transparent;
    color: $primary-600;
    border: 1px solid $primary-600;
    
    &:hover:not(:disabled) {
      background-color: $primary-100;
      transform: translateY(-1px);
    }
    
    &:active:not(:disabled) {
      background-color: $primary-200;
      transform: translateY(0);
    }
  }
  
  // Card styles
  @mixin card {
    background-color: white;
    border-radius: $radius-lg;
    box-shadow: $shadow-md;
    overflow: hidden;
    transition: transform $transition-normal, box-shadow $transition-normal;
    
    &:hover {
      transform: translateY(-4px);
      box-shadow: $shadow-lg;
    }
  }
  
  // Form input styles
  @mixin input {
    width: 100%;
    padding: $space-2 $space-3;
    border: 1px solid $neutral-300;
    border-radius: $radius-md;
    font-family: $font-family-primary;
    font-size: $font-size-base;
    line-height: $line-height-normal;
    transition: border-color $transition-normal, box-shadow $transition-normal;
    
    &:focus {
      outline: none;
      border-color: $primary-400;
      box-shadow: 0 0 0 3px rgba($primary-400, 0.25);
    }
    
    &::placeholder {
      color: $neutral-500;
    }
    
    &:disabled {
      background-color: $neutral-100;
      cursor: not-allowed;
    }
  }
  
  // Truncate text with ellipsis
  @mixin truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  // Hide element visually but keep it accessible for screen readers
  @mixin visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  // Aspect ratio box (for responsive images/videos)
  @mixin aspect-ratio($width, $height) {
    position: relative;
    
    &::before {
      content: "";
      display: block;
      padding-top: ($height / $width) * 100%;
    }
    
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  
  // Badge styles
  @mixin badge($bg-color: $primary-100, $text-color: $primary-800) {
    display: inline-flex;
    align-items: center;
    padding: $space-1 $space-2;
    background-color: $bg-color;
    color: $text-color;
    border-radius: $radius-full;
    font-size: $font-size-xs;
    font-weight: $font-weight-medium;
    line-height: 1;
  }
  